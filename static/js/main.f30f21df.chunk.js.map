{"version":3,"sources":["serviceWorker.js","redux.js","styles.js","Add.js","Editor.js","ListItem.js","List.js","AppBar.js","index.js","Phonebook.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","localStorage","defaults","list","showAddForm","save","setItem","JSON","stringify","loadedPhonebook","parse","getItem","createStore","action","type","index","value","filter","_","i","map","v","search","phonebookProps","phonebookActions","dispatch","addEntry","delEntry","modEntry","setSearch","toggleAddForm","makeStyles","theme","root","width","backgroundColor","palette","background","paper","withSpace","padding","spacing","margin","grow","flexGrow","title","display","breakpoints","up","position","borderRadius","shape","fade","common","white","marginRight","marginLeft","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","transition","transitions","create","connect","classes","useStyles","name","phone","useState","setState","change","e","target","Paper","className","TextField","onChange","label","variant","Button","onClick","setSubmit","style","maxWidth","submitEditor","submit","edit","setEdit","ListItem","key","ListItemAvatar","href","Avatar","Editor","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","List","toLowerCase","AppBar","Toolbar","Typography","noWrap","InputBase","placeholder","input","ReactDOM","render","store","CssBaseline","Add","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f30f21df.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport { createStore } from 'redux'\n\nconst { localStorage } = window;\n\n// state of our application when first used\nconst defaults = {\n  list:[],\n  showAddForm: false\n};\n\n/*\n  Takes the current state as an argument and uses localStorage\n    to save the stringified version permanently\n */\nconst save = state =>\n  localStorage.setItem('phonebook',JSON.stringify(state));\n\n/*\n  Tries to load a stringified state from localStorage\n    - If no record exists returns 'false' to JSON.parse\n      so that JSON.parse does not fail\n    - If no data is available returns defaults\n*/\nconst load = () =>\n  JSON.parse( localStorage.getItem('phonebook') || 'false' )\n  || defaults;\n\nconst loadedPhonebook = load(); // Tries to load state when page opens\n\n/*\n  The reducer manages the state by recieving messages (actions):\n    - If no state is given (on page load) uses 'loadedPhonebook'\n    - Handles incoming actions:\n      - Add a record with the [value] provided\n      - Modify a record at [index] with the [value] provided\n      - Delete a record at [index]\n    - Saves the new state to localStorage\n    - Returns the new state\n*/\nconst phonebookReducer = ( state = loadedPhonebook , action )=> {\n  const { type, index, value } = action;\n  const { list } = state;\n  switch (type) {\n    case 'addEntry':\n      state = { ...state,\n        list: [value,...list]\n        // Create a new array, with [value] and [list]\n      }; break;\n    case 'delEntry':\n      state = { ...state,\n        list: list.filter( (_,i)=> index !== i )\n        // delete the record at [index]\n      }; break;\n    case 'modEntry':\n      state = { ...state,\n        list: list.map( (v,i)=> index === i ? value : v )\n        // replace the record at [index] with [value] else use existing value\n      }; break;\n    case 'setSearch':\n      state = {...state,search:value}; break;\n    case 'toggleAddForm':\n      state = { ...state,showAddForm: ! state.showAddForm }; break;\n    default: break; }\n  save(state);\n  return state;\n}\n\nexport default createStore(\n    phonebookReducer\n);\n\nconst phonebookProps = state => state\n\n/*\n  Prepare the actions to be dispatched in easy to use functions\n*/\nconst phonebookActions = dispatch => { return {\n  addEntry: value => dispatch({type:'addEntry',value}),\n  delEntry: index => dispatch({type:'delEntry',index}),\n  modEntry: (index,value) => dispatch({type:'modEntry',index,value}),\n  setSearch: value => dispatch({type:'setSearch',value}),\n  toggleAddForm: () => dispatch({type:'toggleAddForm'})\n}}\n\nexport { phonebookProps, phonebookActions };\n","\nimport { makeStyles, fade } from '@material-ui/core/styles';\n\nexport default makeStyles( theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  withSpace: {\n    padding: theme.spacing(1),\n    margin: theme.spacing(1),\n    '& > *': {\n      margin: theme.spacing(1),\n    }\n  },\n  // Added fo the AppBar\n  grow: {\n    flexGrow: 1,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: 0,\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  }\n\n}));\n","\n/*\n  Add a Record into the database\n\n  The component is created as an anonymous function,\n    then connected to the Redux context via the [connect] function.\n\n  The first argument to connect is [null] because this component\n    does not recieve any [propsFromState], just the actions.\n\n  Because it is the default export naming it does not connected\n    to be a named function, although this will improve readability\n    in the debugger.\n\n*/\n\nimport React, { useState }     from 'react';\nimport { connect }             from 'react-redux';\n\nimport Paper                   from '@material-ui/core/Paper';\nimport TextField               from '@material-ui/core/TextField';\nimport Button                  from '@material-ui/core/Button';\n\nimport {\n  phonebookActions,\n  phonebookProps\n} from './redux'\n\nimport useStyles               from  './styles'\n\nexport default connect( phonebookProps, phonebookActions )\n( function ({addEntry,showAddForm}){\n  const classes = useStyles(); // custom hook to recieve styles from ./styles.js\n  const defaults = { name:'', phone:'' }; // default values for the state\n  const [state,setState] = useState(defaults); // create a local state for input\n  const {name,phone} = state; // read name and phone from state in local const's\n  const change = e => // handle cahnges, use element name so both fields work\n    setState({...state,[e.target.name]:e.target.value});\n  const submit = e => // call [addEntry] from [phonebookActions], reset fields\n  { addEntry({name,phone}); setState(defaults) };\n  if ( ! showAddForm ) return null;\n  return (\n  <Paper className={classes.withSpace}>\n    <TextField onChange={change} value={name}  name=\"name\"  label=\"Full Name\"    variant=\"outlined\" />\n    <TextField onChange={change} value={phone} name=\"phone\" label=\"Phone Number\" variant=\"outlined\" />\n    <Button     onClick={submit} color=\"primary\" variant=\"contained\">Add</Button>\n  </Paper> );\n});\n","\n/*\n  This is the inline editor we wrote.\n\n  Data from the search field is sent to the Redux state and later\n    used by the [List] component, to filter the list\n\n  The component is created as an anonymous function,\n    then connected to the Redux context via the [connect] function.\n\n  Because it is the default export naming it does not connected\n    to be a named function, although this will improve readability\n    in the debugger.\n\n*/\n\nimport React, { useState }     from 'react';\nimport { connect }             from 'react-redux';\nimport TextField               from '@material-ui/core/TextField';\n\nimport {\n  phonebookProps,\n  phonebookActions\n} from './redux'\n\nexport default connect( phonebookProps, phonebookActions )\n( function({list,index,modEntry,setSubmit}){\n  const [state,setState] = useState(list[index]);\n  const {name,phone} = state;\n  const change = e => setState({...state,[e.target.name]:e.target.value});\n  setSubmit( e => modEntry( index, {name,phone} ) ); // submitEditor\n  return (\n  <span style={{maxWidth: \"calc( 100% - 20ch )\"}}>\n    <TextField onChange={change} value={name}  name=\"name\"  label=\"Full Name\"    variant=\"standard\" />\n    <TextField onChange={change} value={phone} name=\"phone\" label=\"Phone Number\" variant=\"standard\" />\n  </span> );\n});\n","\nimport React                   from 'react';\nimport { connect }             from 'react-redux';\n\nimport IconButton              from '@material-ui/core/IconButton';\nimport ListItem                from '@material-ui/core/ListItem';\nimport ListItemText            from '@material-ui/core/ListItemText';\nimport ListItemAvatar          from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Avatar                  from '@material-ui/core/Avatar';\nimport PhoneAndroid            from '@material-ui/icons/PhoneAndroid';\nimport DeleteIcon              from '@material-ui/icons/Delete';\nimport EditIcon                from '@material-ui/icons/Edit';\nimport ReplayIcon              from '@material-ui/icons/Replay';\n\nimport Editor                  from  './Editor'\n\nimport {\n  phonebookActions\n} from './redux'\n\nlet submitEditor = false;\nconst setSubmit = submit => submitEditor = submit;\n\nexport default connect( null, phonebookActions )\n( function({name,phone,index,edit,setEdit,delEntry}) {\n  return (\n  <ListItem key={index}>\n      <ListItemAvatar>\n        <a href={`tel:${phone}`}>\n        <Avatar>\n          <PhoneAndroid/>\n        </Avatar>\n        </a>\n      </ListItemAvatar>\n    {\n      edit === index\n      ? <Editor index={index} setSubmit={setSubmit}/>\n      : <ListItemText primary={name} secondary={phone} />\n    }\n    <ListItemSecondaryAction>\n      { edit === index ?\n        <IconButton edge=\"start\" aria-label=\"undo\"\n          onClick={e => setEdit(-1) }>\n          <ReplayIcon />\n        </IconButton>\n      : null }\n      <IconButton edge=\"start\" aria-label=\"modify\"\n        color={ edit === index ? 'primary' : 'secondary' }\n        onClick={e => {\n          if ( edit === index ){\n            submitEditor();\n            setEdit(-1);\n          } else setEdit(index);\n        }}>\n        <EditIcon />\n      </IconButton>\n      <IconButton edge=\"end\" aria-label=\"delete\"\n        onClick={e => delEntry(index)}>\n        <DeleteIcon />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n)});\n","\nimport React, { useState }     from 'react';\nimport { connect }             from 'react-redux';\n\nimport Paper                   from '@material-ui/core/Paper';\nimport List                    from '@material-ui/core/List';\n\nimport ListItem                from './ListItem';\nimport useStyles               from  './styles'\n\nimport {\n  phonebookProps,\n  phonebookActions\n} from './redux'\n\nexport default connect( phonebookProps, phonebookActions )\n( function({list,search=''}) {\n  const classes = useStyles();\n  const [ edit, setEdit ] = useState(-1);\n  return (\n  <Paper className={classes.withSpace}>\n    <List className={classes.root}>\n    { list\n      .filter( v => v.name.toLowerCase().match(search.toLowerCase()) )\n      .map( ({name,phone},index)=>\n        <ListItem {...{name,phone,index,edit}} setEdit={setEdit}/>\n    )}\n    </List>\n  </Paper>\n)});\n","\n/*\n  The top application bar, including the quicksearch field.\n\n  Data from the search field is sent to the Redux state and later\n    used by the [List] component, to filter the list\n\n  The component is created as an anonymous function,\n    then connected to the Redux context via the [connect] function.\n\n  Because it is the default export naming it does not connected\n    to be a named function, although this will improve readability\n    in the debugger.\n\n*/\n\nimport React       from 'react';\nimport { connect } from 'react-redux';\n\nimport AppBar      from '@material-ui/core/AppBar';\nimport Toolbar     from '@material-ui/core/Toolbar';\nimport IconButton  from '@material-ui/core/IconButton';\nimport Typography  from '@material-ui/core/Typography';\nimport InputBase   from '@material-ui/core/InputBase';\nimport SearchIcon  from '@material-ui/icons/Search';\nimport AddIcon     from '@material-ui/icons/Add';\nimport RemoveIcon  from '@material-ui/icons/Remove';\n\nimport useStyles   from './styles'\n\nimport {\n  phonebookProps,\n  phonebookActions\n} from './redux'\n\nexport default connect(phonebookProps,phonebookActions)(\nfunction({ search='', showAddForm,   setSearch, toggleAddForm }){\n  const classes = useStyles(); // custom hook to recieve styles from ./styles.js\n  const change = e => setSearch(e.target.value); // send current search to redux\n  return (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography className={classes.title} variant=\"h6\" noWrap>\n        Phonebook\n      </Typography>\n      <div className={classes.grow}/>\n      <IconButton\n        style={{backgroundColor: showAddForm ? 'red' : 'inherit' }}\n        onClick={ e => toggleAddForm() } color=\"inherit\">\n        { showAddForm ? <RemoveIcon/> : <AddIcon/> }\n      </IconButton>\n      {/* this is a very custom input element, taken from the documentation */}\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"Search…\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          value={search}\n          onChange={change}\n        />\n      </div>\n    </Toolbar>\n  </AppBar>\n)});\n","\nimport * as serviceWorker from './serviceWorker';\n\nimport React              from 'react';\nimport ReactDOM           from 'react-dom';\n\nimport Phonebook          from './Phonebook';\n\nReactDOM.render( <Phonebook/>, document.getElementById('root') );\n\n/*\n  In order to allow the user to install our app to his Phone\n  we need to register a serviceWorker:\n    - Downloads all assets in the background and checks for updates (payload)\n    - Is required for advanced features like notifications, payment, etc.\n*/\n\nserviceWorker.register();\n","\nimport React        from 'react';\nimport CssBaseline  from '@material-ui/core/CssBaseline';\n\nimport { Provider } from 'react-redux'  // Make the store available to\n                                        // child components\n\nimport store        from './redux'      // The state-logic of our\n                                        // application (reducer, actions)\n\nimport Add          from './Add'        // Form to add new entries\nimport List         from './List'       // List of all entries\nimport AppBar       from './AppBar'     // List of all entries\n\nexport default function() { return (\n  <Provider store={store}>\n    <CssBaseline/>\n    <AppBar/>\n    <Add/>\n    <List/>\n  </Provider>\n)};\n"],"sourceRoot":""}